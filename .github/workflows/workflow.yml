# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build DB
      run: docker-compose build

    - name: Create DB
      run: docker-compose up -d

    - name: Test
      run: go test -v main_test.go

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: go build -v main.go

  hadolint:
    needs: build  # Run Hadolint after successful build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Baixar script de instalação do Hadolint
        run: wget https://raw.githubusercontent.com/hadolint/hadolint/master/install.sh

      - name: Install Hadolint
        run: |
         bash install.sh -- -v
  
      - name: Run Hadolint
        run: |
          # Encontrar todos os arquivos Dockerfile recursivamente
          find . -type f -name 'Dockerfile' | xargs -I {} hadolint {}

      - name: Fail if Hadolint finds errors  # Fail workflow if Hadolint encounters issues
        if: steps.hadolint.outputs.hadolint_errors != ''
        run: exit 1
      
